// <auto-generated />
using System;
using Master.Microservice.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Master.Microservice.Migrations
{
    [DbContext(typeof(MasterContext))]
    partial class MasterContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Master.Microservice.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("CountryIDId")
                        .HasColumnType("integer");

                    b.Property<string>("Name_ar")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .HasColumnType("text");

                    b.Property<int?>("RegionIDId")
                        .HasColumnType("integer");

                    b.Property<int?>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryIDId");

                    b.HasIndex("RegionIDId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Master.Microservice.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("CurrencyCodeID")
                        .HasColumnType("integer");

                    b.Property<string>("Name_ar")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyCodeID");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Master.Microservice.Models.Currency", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ID"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("StatusID")
                        .HasColumnType("integer");

                    b.HasKey("ID");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("Master.Microservice.Models.Region", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .HasColumnType("text");

                    b.Property<int?>("CountryIDId")
                        .HasColumnType("integer");

                    b.Property<string>("Name_ar")
                        .HasColumnType("text");

                    b.Property<string>("Name_en")
                        .HasColumnType("text");

                    b.Property<int>("StatusId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("CountryIDId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("Master.Microservice.Models.City", b =>
                {
                    b.HasOne("Master.Microservice.Models.Country", "CountryID")
                        .WithMany()
                        .HasForeignKey("CountryIDId");

                    b.HasOne("Master.Microservice.Models.Region", "RegionID")
                        .WithMany()
                        .HasForeignKey("RegionIDId");

                    b.Navigation("CountryID");

                    b.Navigation("RegionID");
                });

            modelBuilder.Entity("Master.Microservice.Models.Country", b =>
                {
                    b.HasOne("Master.Microservice.Models.Currency", "CurrencyCode")
                        .WithMany()
                        .HasForeignKey("CurrencyCodeID");

                    b.Navigation("CurrencyCode");
                });

            modelBuilder.Entity("Master.Microservice.Models.Region", b =>
                {
                    b.HasOne("Master.Microservice.Models.Country", "CountryID")
                        .WithMany()
                        .HasForeignKey("CountryIDId");

                    b.Navigation("CountryID");
                });
#pragma warning restore 612, 618
        }
    }
}
